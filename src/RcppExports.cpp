// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// distanceMatrixTest
Rcpp::NumericMatrix distanceMatrixTest(std::string filePath);
RcppExport SEXP _DynamicOrienteeringAlgorithms_distanceMatrixTest(SEXP filePathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filePath(filePathSEXP);
    rcpp_result_gen = Rcpp::wrap(distanceMatrixTest(filePath));
    return rcpp_result_gen;
END_RCPP
}
// exportToDistanceMatrix
void exportToDistanceMatrix(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, std::string problemName, std::string destination);
RcppExport SEXP _DynamicOrienteeringAlgorithms_exportToDistanceMatrix(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP problemNameSEXP, SEXP destinationSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type destination(destinationSEXP);
    exportToDistanceMatrix(nodeDf, arcDf, problemDf, problemName, destination);
    return R_NilValue;
END_RCPP
}
// readDistanceMatrix
Rcpp::NumericMatrix readDistanceMatrix(std::string pathToMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_readDistanceMatrix(SEXP pathToMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type pathToMatrix(pathToMatrixSEXP);
    rcpp_result_gen = Rcpp::wrap(readDistanceMatrix(pathToMatrix));
    return rcpp_result_gen;
END_RCPP
}
// callEa4OpSolver
void callEa4OpSolver(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, int runNumber, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callEa4OpSolver(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callEa4OpSolver(nodeDf, arcDf, problemDf, budget, problemName, runNumber, fileSuffix, pathToChanges, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// callEa4OpImprover
void callEa4OpImprover(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, unsigned int runNumber, std::string pathToInitialSolution, double dominanceOfInitialSolution, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callEa4OpImprover(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP pathToInitialSolutionSEXP, SEXP dominanceOfInitialSolutionSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToInitialSolution(pathToInitialSolutionSEXP);
    Rcpp::traits::input_parameter< double >::type dominanceOfInitialSolution(dominanceOfInitialSolutionSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callEa4OpImprover(nodeDf, arcDf, problemDf, budget, problemName, runNumber, pathToInitialSolution, dominanceOfInitialSolution, fileSuffix, pathToChanges, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// callEvaluator
Rcpp::List callEvaluator(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, const std::vector<int>& indices, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callEvaluator(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP indicesSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    rcpp_result_gen = Rcpp::wrap(callEvaluator(nodeDf, arcDf, problemDf, budget, indices, pathToDistanceMatrix));
    return rcpp_result_gen;
END_RCPP
}
// callGraspSrSolver
void callGraspSrSolver(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, int runNumber, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callGraspSrSolver(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callGraspSrSolver(nodeDf, arcDf, problemDf, budget, problemName, runNumber, fileSuffix, pathToChanges, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// callGraspSrImprover
void callGraspSrImprover(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, unsigned int runNumber, std::string pathToInitialSolution, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callGraspSrImprover(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP pathToInitialSolutionSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToInitialSolution(pathToInitialSolutionSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callGraspSrImprover(nodeDf, arcDf, problemDf, budget, problemName, runNumber, pathToInitialSolution, fileSuffix, pathToChanges, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// convertLGFtoR
List convertLGFtoR(std::string filePath);
RcppExport SEXP _DynamicOrienteeringAlgorithms_convertLGFtoR(SEXP filePathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filePath(filePathSEXP);
    rcpp_result_gen = Rcpp::wrap(convertLGFtoR(filePath));
    return rcpp_result_gen;
END_RCPP
}
// saveDigraphAsLGF
void saveDigraphAsLGF(std::string filePath, Rcpp::DataFrame& nodeDf, Rcpp::DataFrame& arcDf);
RcppExport SEXP _DynamicOrienteeringAlgorithms_saveDigraphAsLGF(SEXP filePathSEXP, SEXP nodeDfSEXP, SEXP arcDfSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filePath(filePathSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    saveDigraphAsLGF(filePath, nodeDf, arcDf);
    return R_NilValue;
END_RCPP
}
// saveDigraphWithProblemDataAsLGF
void saveDigraphWithProblemDataAsLGF(std::string filePath, Rcpp::DataFrame& nodeDf, Rcpp::DataFrame& arcDf, Rcpp::DataFrame& problemDf, double budget);
RcppExport SEXP _DynamicOrienteeringAlgorithms_saveDigraphWithProblemDataAsLGF(SEXP filePathSEXP, SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filePath(filePathSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    saveDigraphWithProblemDataAsLGF(filePath, nodeDf, arcDf, problemDf, budget);
    return R_NilValue;
END_RCPP
}
// naiveInitialSolution
void naiveInitialSolution(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, std::string fileSuffix, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_naiveInitialSolution(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP fileSuffixSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    naiveInitialSolution(nodeDf, arcDf, problemDf, budget, problemName, fileSuffix, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// plotNetworkRoute_R
void plotNetworkRoute_R(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, const std::vector<int>& nodeIDs);
RcppExport SEXP _DynamicOrienteeringAlgorithms_plotNetworkRoute_R(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP nodeIDsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type nodeIDs(nodeIDsSEXP);
    plotNetworkRoute_R(nodeDf, arcDf, problemDf, nodeIDs);
    return R_NilValue;
END_RCPP
}
// callRandomSolver
void callRandomSolver(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string algoName, std::string problemName, std::string fileSuffix, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callRandomSolver(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP algoNameSEXP, SEXP problemNameSEXP, SEXP fileSuffixSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type algoName(algoNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callRandomSolver(nodeDf, arcDf, problemDf, budget, algoName, problemName, fileSuffix, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// callRandomImprover
void callRandomImprover(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string algoName, std::string problemName, std::string pathToInitialSolution, std::string fileSuffix, std::string pathToDistanceMatrix);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callRandomImprover(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP algoNameSEXP, SEXP problemNameSEXP, SEXP pathToInitialSolutionSEXP, SEXP fileSuffixSEXP, SEXP pathToDistanceMatrixSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type algoName(algoNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToInitialSolution(pathToInitialSolutionSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    callRandomImprover(nodeDf, arcDf, problemDf, budget, algoName, problemName, pathToInitialSolution, fileSuffix, pathToDistanceMatrix);
    return R_NilValue;
END_RCPP
}
// callVNSSolver
void callVNSSolver(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, unsigned int runNumber, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix, bool withLocalSearch, bool withLinKernighan, double perturbationProbability);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callVNSSolver(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP, SEXP withLocalSearchSEXP, SEXP withLinKernighanSEXP, SEXP perturbationProbabilitySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    Rcpp::traits::input_parameter< bool >::type withLocalSearch(withLocalSearchSEXP);
    Rcpp::traits::input_parameter< bool >::type withLinKernighan(withLinKernighanSEXP);
    Rcpp::traits::input_parameter< double >::type perturbationProbability(perturbationProbabilitySEXP);
    callVNSSolver(nodeDf, arcDf, problemDf, budget, problemName, runNumber, fileSuffix, pathToChanges, pathToDistanceMatrix, withLocalSearch, withLinKernighan, perturbationProbability);
    return R_NilValue;
END_RCPP
}
// callVNSImprover
void callVNSImprover(const Rcpp::DataFrame& nodeDf, const Rcpp::DataFrame& arcDf, const Rcpp::DataFrame& problemDf, double budget, std::string problemName, unsigned int runNumber, std::string pathToInitialSolution, std::string fileSuffix, std::string pathToChanges, std::string pathToDistanceMatrix, bool withLocalSearch, bool withLinKernighan, double perturbationProbability);
RcppExport SEXP _DynamicOrienteeringAlgorithms_callVNSImprover(SEXP nodeDfSEXP, SEXP arcDfSEXP, SEXP problemDfSEXP, SEXP budgetSEXP, SEXP problemNameSEXP, SEXP runNumberSEXP, SEXP pathToInitialSolutionSEXP, SEXP fileSuffixSEXP, SEXP pathToChangesSEXP, SEXP pathToDistanceMatrixSEXP, SEXP withLocalSearchSEXP, SEXP withLinKernighanSEXP, SEXP perturbationProbabilitySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type nodeDf(nodeDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type arcDf(arcDfSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type problemDf(problemDfSEXP);
    Rcpp::traits::input_parameter< double >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type problemName(problemNameSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type runNumber(runNumberSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToInitialSolution(pathToInitialSolutionSEXP);
    Rcpp::traits::input_parameter< std::string >::type fileSuffix(fileSuffixSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToChanges(pathToChangesSEXP);
    Rcpp::traits::input_parameter< std::string >::type pathToDistanceMatrix(pathToDistanceMatrixSEXP);
    Rcpp::traits::input_parameter< bool >::type withLocalSearch(withLocalSearchSEXP);
    Rcpp::traits::input_parameter< bool >::type withLinKernighan(withLinKernighanSEXP);
    Rcpp::traits::input_parameter< double >::type perturbationProbability(perturbationProbabilitySEXP);
    callVNSImprover(nodeDf, arcDf, problemDf, budget, problemName, runNumber, pathToInitialSolution, fileSuffix, pathToChanges, pathToDistanceMatrix, withLocalSearch, withLinKernighan, perturbationProbability);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DynamicOrienteeringAlgorithms_distanceMatrixTest", (DL_FUNC) &_DynamicOrienteeringAlgorithms_distanceMatrixTest, 1},
    {"_DynamicOrienteeringAlgorithms_exportToDistanceMatrix", (DL_FUNC) &_DynamicOrienteeringAlgorithms_exportToDistanceMatrix, 5},
    {"_DynamicOrienteeringAlgorithms_readDistanceMatrix", (DL_FUNC) &_DynamicOrienteeringAlgorithms_readDistanceMatrix, 1},
    {"_DynamicOrienteeringAlgorithms_callEa4OpSolver", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callEa4OpSolver, 9},
    {"_DynamicOrienteeringAlgorithms_callEa4OpImprover", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callEa4OpImprover, 11},
    {"_DynamicOrienteeringAlgorithms_callEvaluator", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callEvaluator, 6},
    {"_DynamicOrienteeringAlgorithms_callGraspSrSolver", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callGraspSrSolver, 9},
    {"_DynamicOrienteeringAlgorithms_callGraspSrImprover", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callGraspSrImprover, 10},
    {"_DynamicOrienteeringAlgorithms_convertLGFtoR", (DL_FUNC) &_DynamicOrienteeringAlgorithms_convertLGFtoR, 1},
    {"_DynamicOrienteeringAlgorithms_saveDigraphAsLGF", (DL_FUNC) &_DynamicOrienteeringAlgorithms_saveDigraphAsLGF, 3},
    {"_DynamicOrienteeringAlgorithms_saveDigraphWithProblemDataAsLGF", (DL_FUNC) &_DynamicOrienteeringAlgorithms_saveDigraphWithProblemDataAsLGF, 5},
    {"_DynamicOrienteeringAlgorithms_naiveInitialSolution", (DL_FUNC) &_DynamicOrienteeringAlgorithms_naiveInitialSolution, 7},
    {"_DynamicOrienteeringAlgorithms_plotNetworkRoute_R", (DL_FUNC) &_DynamicOrienteeringAlgorithms_plotNetworkRoute_R, 4},
    {"_DynamicOrienteeringAlgorithms_callRandomSolver", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callRandomSolver, 8},
    {"_DynamicOrienteeringAlgorithms_callRandomImprover", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callRandomImprover, 9},
    {"_DynamicOrienteeringAlgorithms_callVNSSolver", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callVNSSolver, 12},
    {"_DynamicOrienteeringAlgorithms_callVNSImprover", (DL_FUNC) &_DynamicOrienteeringAlgorithms_callVNSImprover, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_DynamicOrienteeringAlgorithms(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
